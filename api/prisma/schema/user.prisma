model User {
  id        String  @id @default(uuid())
  email     String  @unique
  firstName String
  lastName  String
  password  String
  isActive  Boolean @default(false)

  roles UserRole[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Role {
  id          String  @id @default(uuid())
  name        String  @unique
  description String?

  permissions RolePermission[]
  users       UserRole[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Permission {
  id          String  @id @default(uuid())
  name        String  @unique
  description String?

  roles RolePermission[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model UserRole {
  id     String @id @default(uuid())
  userId String
  roleId String

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
  role Role @relation(fields: [roleId], references: [id], onDelete: Cascade)

  @@unique([userId, roleId])
}

model RolePermission {
  id           String @id @default(uuid())
  roleId       String
  permissionId String

  role       Role       @relation(fields: [roleId], references: [id], onDelete: Cascade)
  permission Permission @relation(fields: [permissionId], references: [id], onDelete: Cascade)

  @@unique([roleId, permissionId])
}
