services:
  postgres:
    image: postgres:15
    restart: always
    env_file:
      - ../envs/.env-db
    volumes:
      - pgdata:/var/lib/postgresql/data

  prisma-manager:
    build:
      context: .
      dockerfile: apps/prisma-manager/Dockerfile
    working_dir: /usr/src/app
    volumes:
      - ./prisma:/usr/src/app/prisma
      - ./node_modules:/usr/src/app/node_modules
    env_file:
      - ../envs/.env-db
    ports:
      - "5555:5555"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.prisma.rule=PathPrefix(`/studio`)"
      - "traefik.http.routers.prisma.entrypoints=web"
      - "traefik.http.services.prisma.loadbalancer.server.port=5555"
    depends_on:
      - postgres
    command: ["npx", "prisma", "studio", "--schema=prisma/schema.prisma", "--port", "5555"]

  user-service:
    build:
      context: .
      dockerfile: apps/user-service/Dockerfile
    working_dir: /usr/src/app
    volumes:
      - ./apps/user-service:/usr/src/app
      - ./prisma:/usr/src/app/prisma
      - /usr/src/app/node_modules
    env_file:
      - ../envs/.env-db
      - ../envs/.env-api
    ports:
      - "3001:3000"
    command: ["npm", "run", "dev"]
    depends_on:
      - postgres

  resource-service:
    build:
      context: .
      dockerfile: apps/resource-service/Dockerfile
    working_dir: /usr/src/app
    volumes:
      - ./apps/resource-service:/usr/src/app
      - ./prisma:/usr/src/app/prisma
      - /usr/src/app/node_modules
    env_file:
      - ../envs/.env-db
      - ../envs/.env-api
    ports:
      - "3002:3000"
    command: ["npm", "run", "dev"]
    depends_on:
      - postgres

  traefik:
    image: traefik:v3.0
    command:
      - "--api.dashboard=true"
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--entrypoints.web.address=:80"
    ports:
      - "80:80"
      - "8080:8080"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"

volumes:
  pgdata: