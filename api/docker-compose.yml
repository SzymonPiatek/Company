services:
  traefik:
    image: traefik:v3.0
    command:
      - "--api.dashboard=true"
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--entrypoints.web.address=:80"
    ports:
      - "80:80"
      - "8080:8080"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"

  postgres:
    image: postgres:15
    restart: always
    env_file:
      - ../envs/.env-db
    volumes:
      - pgdata:/var/lib/postgresql/data

  resource-service:
    build:
      context: ./resource-service
      dockerfile: Dockerfile
    ports:
      - '5555:5555'
    volumes:
      - ./resource-service:/usr/src/app
      - /usr/src/app/node_modules
    env_file:
      - ../envs/.env-db
    labels:
    - "traefik.enable=true"
    - "traefik.http.routers.resource.rule=PathPrefix(`/api/resource`)"
    - "traefik.http.routers.resource.entrypoints=web"
    - "traefik.http.services.resource.loadbalancer.server.port=3000"
    depends_on:
      - postgres
    command: ["sh", "-c", "npm run dev & npx prisma studio"]

volumes:
  pgdata:
